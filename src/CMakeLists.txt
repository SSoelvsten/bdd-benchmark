add_subdirectory (common common)

macro(add_bdd_benchmark NAME)
  # Adiar
  add_executable(adiar_${NAME}_bdd adiar/${NAME}_bdd.cpp)
  target_link_libraries(adiar_${NAME}_bdd PRIVATE adiar)
  target_link_libraries(adiar_${NAME}_bdd PRIVATE common)
  if (BDD_BENCHMARK_GRENDEL)
    target_compile_definitions(adiar_${NAME}_bdd PRIVATE BDD_BENCHMARK_GRENDEL)
  endif()
  if (BDD_BENCHMARK_STATS)
    target_compile_definitions(adiar_${NAME}_bdd PRIVATE BDD_BENCHMARK_STATS)
  endif()
  if (BDD_BENCHMARK_WAIT)
    target_compile_definitions(adiar_${NAME}_bdd PRIVATE BDD_BENCHMARK_WAIT)
  endif()

  # BuDDy
  add_executable(buddy_${NAME}_bdd buddy/${NAME}_bdd.cpp)
  target_link_libraries(buddy_${NAME}_bdd PRIVATE buddy)
  target_link_libraries(buddy_${NAME}_bdd PRIVATE common)
  if (BDD_BENCHMARK_GRENDEL)
    target_compile_definitions(buddy_${NAME}_bdd PRIVATE BDD_BENCHMARK_GRENDEL)
  endif()
  if (BDD_BENCHMARK_STATS)
    target_compile_definitions(buddy_${NAME}_bdd PRIVATE BDD_BENCHMARK_STATS)
  endif()
  if (BDD_BENCHMARK_WAIT)
    target_compile_definitions(buddy_${NAME}_bdd PRIVATE BDD_BENCHMARK_WAIT)
  endif()

  # Biodivine/LibBDD
  add_executable(libbdd_${NAME}_bdd libbdd/${NAME}_bdd.cpp)
  target_link_libraries(libbdd_${NAME}_bdd PRIVATE lib-bdd-ffi)
  target_link_libraries(libbdd_${NAME}_bdd PRIVATE common)
  if (BDD_BENCHMARK_GRENDEL)
    target_compile_definitions(libbdd_${NAME}_bdd PRIVATE BDD_BENCHMARK_GRENDEL)
  endif()
  if (BDD_BENCHMARK_STATS)
    target_compile_definitions(libbdd_${NAME}_bdd PRIVATE BDD_BENCHMARK_STATS)
  endif()
  if (BDD_BENCHMARK_WAIT)
    target_compile_definitions(libbdd_${NAME}_bdd PRIVATE BDD_BENCHMARK_WAIT)
  endif()

  # OxiDD
  add_executable(oxidd_${NAME}_bdd oxidd/${NAME}_bdd.cpp)
  target_link_libraries(oxidd_${NAME}_bdd PRIVATE oxidd)
  target_link_libraries(oxidd_${NAME}_bdd PRIVATE common)
  if (BDD_BENCHMARK_GRENDEL)
    target_compile_definitions(oxidd_${NAME}_bdd PRIVATE BDD_BENCHMARK_GRENDEL)
  endif()
  if (BDD_BENCHMARK_STATS)
    target_compile_definitions(oxidd_${NAME}_bdd PRIVATE BDD_BENCHMARK_STATS)
  endif()
  if (BDD_BENCHMARK_WAIT)
    target_compile_definitions(oxidd_${NAME}_bdd PRIVATE BDD_BENCHMARK_WAIT)
  endif()
endmacro(add_bdd_benchmark)

macro(add_bcdd_benchmark NAME)
  # CAL
  add_executable(cal_${NAME}_bcdd cal/${NAME}_bcdd.cpp)
  target_link_libraries(cal_${NAME}_bcdd PRIVATE cal)
  target_link_libraries(cal_${NAME}_bcdd PRIVATE common)
  if (BDD_BENCHMARK_GRENDEL)
    target_compile_definitions(cal_${NAME}_bcdd PRIVATE BDD_BENCHMARK_GRENDEL)
  endif()
  if (BDD_BENCHMARK_STATS)
    target_compile_definitions(cal_${NAME}_bcdd PRIVATE BDD_BENCHMARK_STATS)
  endif()
  if (BDD_BENCHMARK_WAIT)
    target_compile_definitions(cal_${NAME}_bcdd PRIVATE BDD_BENCHMARK_WAIT)
  endif()

  # CUDD
  add_executable(cudd_${NAME}_bcdd cudd/${NAME}_bcdd.cpp)
  target_link_libraries(cudd_${NAME}_bcdd PRIVATE cudd)
  target_link_libraries(cudd_${NAME}_bcdd PRIVATE common)
  if (BDD_BENCHMARK_GRENDEL)
    target_compile_definitions(cudd_${NAME}_bcdd PRIVATE BDD_BENCHMARK_GRENDEL)
  endif()
  if (BDD_BENCHMARK_STATS)
    target_compile_definitions(cudd_${NAME}_bcdd PRIVATE BDD_BENCHMARK_STATS)
  endif()
  if (BDD_BENCHMARK_WAIT)
    target_compile_definitions(cudd_${NAME}_bcdd PRIVATE BDD_BENCHMARK_WAIT)
  endif()

  # OxiDD
  add_executable(oxidd_${NAME}_bcdd oxidd/${NAME}_bcdd.cpp)
  target_link_libraries(oxidd_${NAME}_bcdd PRIVATE oxidd)
  target_link_libraries(oxidd_${NAME}_bcdd PRIVATE common)
  if (BDD_BENCHMARK_GRENDEL)
    target_compile_definitions(oxidd_${NAME}_bcdd PRIVATE BDD_BENCHMARK_GRENDEL)
  endif()
  if (BDD_BENCHMARK_STATS)
    target_compile_definitions(oxidd_${NAME}_bcdd PRIVATE BDD_BENCHMARK_STATS)
  endif()
  if (BDD_BENCHMARK_WAIT)
    target_compile_definitions(oxidd_${NAME}_bcdd PRIVATE BDD_BENCHMARK_WAIT)
  endif()

  # Sylvan
  add_executable(sylvan_${NAME}_bcdd sylvan/${NAME}_bcdd.cpp)
  target_link_libraries(sylvan_${NAME}_bcdd PRIVATE sylvan::sylvan)
  target_link_libraries(sylvan_${NAME}_bcdd PRIVATE common)
  if (BDD_BENCHMARK_GRENDEL)
    target_compile_definitions(sylvan_${NAME}_bcdd PRIVATE BDD_BENCHMARK_GRENDEL)
  endif()
  if (BDD_BENCHMARK_STATS)
    target_compile_definitions(sylvan_${NAME}_bcdd PRIVATE BDD_BENCHMARK_STATS)
  endif()
  if (BDD_BENCHMARK_WAIT)
    target_compile_definitions(sylvan_${NAME}_bcdd PRIVATE BDD_BENCHMARK_WAIT)
  endif()
endmacro(add_bcdd_benchmark)

macro(add_zdd_benchmark NAME)
  # Adiar
  add_executable(adiar_${NAME}_zdd adiar/${NAME}_zdd.cpp)
  target_link_libraries(adiar_${NAME}_zdd PRIVATE adiar)
  target_link_libraries(adiar_${NAME}_zdd PRIVATE common)

  if (BDD_BENCHMARK_GRENDEL)
    target_compile_definitions(adiar_${NAME}_zdd PRIVATE BDD_BENCHMARK_GRENDEL)
  endif()
  if (BDD_BENCHMARK_STATS)
    target_compile_definitions(adiar_${NAME}_zdd PRIVATE BDD_BENCHMARK_STATS)
  endif()
  if (BDD_BENCHMARK_WAIT)
    target_compile_definitions(adiar_${NAME}_zdd PRIVATE BDD_BENCHMARK_WAIT)
  endif()

  # CUDD
  add_executable(cudd_${NAME}_zdd cudd/${NAME}_zdd.cpp)
  target_link_libraries(cudd_${NAME}_zdd PRIVATE cudd)
  target_link_libraries(cudd_${NAME}_zdd PRIVATE common)
  if (BDD_BENCHMARK_GRENDEL)
    target_compile_definitions(cudd_${NAME}_zdd PRIVATE BDD_BENCHMARK_GRENDEL)
  endif()
  if (BDD_BENCHMARK_STATS)
    target_compile_definitions(cudd_${NAME}_zdd PRIVATE BDD_BENCHMARK_STATS)
  endif()
  if (BDD_BENCHMARK_WAIT)
    target_compile_definitions(cudd_${NAME}_zdd PRIVATE BDD_BENCHMARK_WAIT)
  endif()

  # OxiDD
  add_executable(oxidd_${NAME}_zdd oxidd/${NAME}_zdd.cpp)
  target_link_libraries(oxidd_${NAME}_zdd PRIVATE oxidd)
  target_link_libraries(oxidd_${NAME}_zdd PRIVATE common)
  if (BDD_BENCHMARK_GRENDEL)
    target_compile_definitions(oxidd_${NAME}_zdd PRIVATE BDD_BENCHMARK_GRENDEL)
  endif()
  if (BDD_BENCHMARK_STATS)
    target_compile_definitions(oxidd_${NAME}_zdd PRIVATE BDD_BENCHMARK_STATS)
  endif()
  if (BDD_BENCHMARK_WAIT)
    target_compile_definitions(oxidd_${NAME}_zdd PRIVATE BDD_BENCHMARK_WAIT)
  endif()
endmacro(add_zdd_benchmark)

macro(add_benchmark NAME)
  add_bdd_benchmark(${NAME})
  add_bcdd_benchmark(${NAME})
  add_zdd_benchmark(${NAME})
endmacro(add_benchmark)

macro(link_bdd_extra NAME LIB_NAME)
  target_link_libraries(adiar_${NAME}_bdd   PRIVATE ${LIB_NAME})
  target_link_libraries(buddy_${NAME}_bdd   PRIVATE ${LIB_NAME})
  target_link_libraries(libbdd_${NAME}_bdd  PRIVATE ${LIB_NAME})
  target_link_libraries(oxidd_${NAME}_bdd   PRIVATE ${LIB_NAME})
endmacro(link_bdd_extra)

macro(link_bcdd_extra NAME LIB_NAME)
  target_link_libraries(cal_${NAME}_bcdd    PRIVATE ${LIB_NAME})
  target_link_libraries(cudd_${NAME}_bcdd   PRIVATE ${LIB_NAME})
  target_link_libraries(oxidd_${NAME}_bcdd  PRIVATE ${LIB_NAME})
  target_link_libraries(sylvan_${NAME}_bcdd PRIVATE ${LIB_NAME})
endmacro(link_bcdd_extra)

macro(link_zdd_extra NAME LIB_NAME)
  target_link_libraries(adiar_${NAME}_zdd   PRIVATE ${LIB_NAME})
  target_link_libraries(cudd_${NAME}_zdd    PRIVATE ${LIB_NAME})
  target_link_libraries(oxidd_${NAME}_zdd   PRIVATE ${LIB_NAME})
endmacro(link_zdd_extra)

macro(link_extra NAME LIB_NAME)
  link_bdd_extra(${NAME} ${LIB_NAME})
  link_bcdd_extra(${NAME} ${LIB_NAME})
  link_zdd_extra(${NAME} ${LIB_NAME})
endmacro(link_extra)

# ---------------------------------------------------------------------------- #
# Combinatorial Benchmarks
add_benchmark(game-of-life)
add_benchmark(hamiltonian)
add_benchmark(queens)
add_benchmark(tic-tac-toe)

# ---------------------------------------------------------------------------- #
# Verification
add_benchmark(picotrav)
link_extra(picotrav libblifparse)

add_bdd_benchmark(qbf)

# ---------------------------------------------------------------------------- #
# Other Benchmarks
add_benchmark(apply)
